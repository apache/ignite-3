# name: test/sql/types/blob/test_blob.test
# description: BLOB tests
# feature: T021(BINARY and VARBINARY data types)
# group: [blob]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE blobs (b varbinary);

# Insert valid hex strings
statement ok
INSERT INTO blobs VALUES(x'aaffaa'), (x'AAFFAAAAFFAA'), (x'AAFFAAAAFFAAAAFFAA')

query T rowsort
SELECT * FROM blobs
----
aaffaa
aaffaaaaffaa
aaffaaaaffaaaaffaa

# Insert valid hex strings, lower case
statement ok
DELETE FROM blobs

statement ok
INSERT INTO blobs VALUES(x'aaffaa'), (x'aaffaaaaffaa'), (x'aaffaaaaffaaaaffaa')

query T rowsort
SELECT * FROM blobs
----
aaffaa
aaffaaaaffaa
aaffaaaaffaaaaffaa

# Insert valid hex strings with number and letters
statement ok
DELETE FROM blobs

statement ok
INSERT INTO blobs VALUES(x'aa1199'), (x'aa1199aa1199'), (x'aa1199aa1199aa1199')

query T rowsort
SELECT * FROM blobs
----
aa1199
aa1199aa1199
aa1199aa1199aa1199

# Insert invalid hex strings (invalid hex chars: G, H, I)
statement error
INSERT INTO blobs VALUES(x'GAFFAA')

# Insert invalid hex strings (odd # of chars)
statement error
INSERT INTO blobs VALUES(x'A')

statement error
INSERT INTO blobs VALUES(x'AAA')

statement ok
DELETE FROM blobs

# Implicit cast
statement error
INSERT INTO blobs VALUES('blablabla')

# BINARY null and empty values
statement error
query T
SELECT ''::VARBINARY

query T
SELECT NULL::VARBINARY
----
NULL

statement error: BINARY length 0 must be between 1 and 65536. [column=C1]
CREATE TABLE t_invalid_length(c1 BINARY(0));

statement error: VARBINARY length 0 must be between 1 and 65536. [column=C1]
CREATE TABLE t_invalid_length(c1 VARBINARY(0));

statement error: BINARY length 0 must be between 1 and 65536
SELECT CAST(x'0101' AS BINARY(0))

statement error: VARBINARY length 0 must be between 1 and 65536
SELECT CAST(x'0101' AS VARBINARY(0))

statement ok
CREATE TABLE all_blobs (c1 binary, c2 binary(10), c3 varbinary, c4 varbinary(10), c5 binary varying, c6 binary varying(10));

statement ok
INSERT INTO all_blobs VALUES (x'cc', x'ccaaffee', x'ccaaffee', x'ccaaffee', x'ccaaffee', x'ccaaffee');

query TTTTTT
SELECT * FROM all_blobs;
----
cc	ccaaffee	ccaaffee	ccaaffee	ccaaffee	ccaaffee

statement ok
DELETE FROM all_blobs

skipif ignite3
# https://issues.apache.org/jira/browse/IGNITE-22316
# check standard section: <binary value expression> ::= <binary concatenation> | <binary factor>
query T
SELECT x'12' || '10';
----
42

query T
select X'' || X'12'
----
12

query T
select X'11' || X'22';
----
1122

query T
select CAST(x'Aa' AS BINARY VARYING(1000));
----
aa


for type in [BINARY, VARBINARY]

statement ok
CREATE TABLE t(id INT PRIMARY KEY, val ${type}(2))

statement ok
INSERT INTO t VALUES(201, x'000000')

query T
SELECT val FROM t WHERE id = 201
----
0000

statement ok
INSERT INTO t SELECT * FROM (VALUES(202, x'000000')) as tk(k, v)

query T
SELECT val FROM t WHERE id = 202
----
0000

statement ok
CREATE TABLE t1(id INT PRIMARY KEY, val ${type}(3))

statement ok
INSERT INTO t1 VALUES(2, x'000000')

statement ok
INSERT INTO t SELECT id, val FROM t1

query T
SELECT val FROM t WHERE id = 2
----
0000

statement ok
INSERT INTO t VALUES(1, x'01')

statement ok
UPDATE t SET val=x'000000' WHERE id=1

query T
SELECT val FROM t WHERE id = 1
----
0000

statement ok
DROP TABLE t

statement ok
DROP TABLE t1

endfor
