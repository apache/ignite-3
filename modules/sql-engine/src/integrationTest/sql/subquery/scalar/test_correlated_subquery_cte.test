# name: test/sql/subquery/scalar/test_correlated_subquery_cte.test
# description: Test correlated subqueries
# feature: SQL T122(WITH (excluding RECURSIVE) in subquery)
# group: [scalar]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE integers(i INTEGER)

statement ok
INSERT INTO integers VALUES (1), (2), (3), (NULL)

# scalar select with correlation
query II
SELECT i, (WITH i2 AS (SELECT 42+i1.i AS j) SELECT j FROM i2) AS j FROM integers i1 ORDER BY i;
----
1	43
2	44
3	45
NULL	NULL

skipif ignite3
#https://issues.apache.org/jira/browse/IGNITE-15995
query I
SELECT * FROM (SELECT 1) ORDER BY (WITH t AS (SELECT 1) SELECT * FROM t)
----
1

# ORDER BY correlated subquery
skipif ignite3
#https://issues.apache.org/jira/browse/IGNITE-15995
query I
SELECT i FROM integers i1 ORDER BY (WITH i2 AS (SELECT 100-i1.i as j) SELECT j FROM i2);
----
3
2
1
NULL

# subquery returning multiple results
statement error
SELECT i, (WITH i2 AS (SELECT 42+i1.i AS j FROM integers) SELECT j FROM i2) AS j FROM integers i1 ORDER BY i;

# subquery with LIMIT
query II
SELECT i, (WITH i2 AS (SELECT 42+i1.i AS j FROM integers) SELECT j FROM i2 LIMIT 1) AS j FROM integers i1 ORDER BY i;
----
1	43
2	44
3	45
NULL	NULL

# subquery with LIMIT 0
query II
SELECT i, (WITH i2 AS (SELECT 42+i1.i AS j FROM integers) SELECT j FROM i2 LIMIT 0) AS j FROM integers i1 ORDER BY i;
----
1	NULL
2	NULL
3	NULL
NULL	NULL

# subquery with WHERE clause that is always FALSE
query II
SELECT i, (WITH i2 AS (SELECT i FROM integers WHERE 1=0 AND i1.i=i) SELECT i FROM i2) AS j FROM integers i1 ORDER BY i NULLS FIRST;
----
NULL	NULL
1	NULL
2	NULL
3	NULL

# correlated EXISTS with WHERE clause that is always FALSE
query IT
SELECT i, EXISTS(WITH i2 AS (SELECT i FROM integers WHERE 1=0 AND i1.i=i) SELECT i FROM i2) AS j FROM integers i1 ORDER BY i;
----
1	false
2	false
3	false
NULL	false

# correlated ANY with WHERE clause that is always FALSE
query IT
SELECT i, i=ANY(WITH i2 AS (SELECT i FROM integers WHERE 1=0 AND i1.i=i) SELECT i FROM i2) AS j FROM integers i1 ORDER BY i;
----
1	false
2	false
3	false
NULL	false

# subquery with OFFSET AND ORDER BY is supported
query II
SELECT i, (WITH i2 AS (SELECT i+i1.i FROM integers ORDER BY I LIMIT 1 OFFSET 1) SELECT * FROM i2) AS j FROM integers i1 ORDER BY i;
----
1	3
2	4
3	5
NULL	NULL

# subquery with OFFSET AND ORDER BY is supported
query II
SELECT i, (WITH i2 AS (SELECT i+i1.i FROM integers ORDER BY 1 LIMIT 1 OFFSET 1) SELECT * FROM i2) AS j FROM integers i1 ORDER BY i DESC;
----
NULL	NULL
3	5
2	4
1	3

# subquery with OFFSET AND ORDER BY is supported
query II
SELECT i, (WITH i2 AS (SELECT i+i1.i FROM integers ORDER BY 1 DESC LIMIT 1 OFFSET 2) SELECT * FROM i2) AS j FROM integers i1 ORDER BY i DESC;
----
NULL	NULL
3	5
2	4
1	3

# correlated filter without FROM clause
statement error
SELECT i, (WITH i2 AS (SELECT 42 WHERE i1.i>2) SELECT * FROM i2) AS j FROM integers i1 ORDER BY i;

# correlated filter with matching entry on NULL
statement error
SELECT i, (WITH i2 AS (SELECT 42 WHERE i1.i IS NULL) SELECT * FROM i2) AS j FROM integers i1 ORDER BY i;

# scalar select with correlation in projection
query II
SELECT i, (WITH i2 AS (SELECT i+i1.i FROM integers WHERE i=1) SELECT * FROM i2) AS j FROM integers i1 ORDER BY i;
----
1	2
2	3
3	4
NULL	NULL

# scalar select with correlation in filter
query II
SELECT i, (WITH i2 AS (SELECT i FROM integers WHERE i=i1.i) SELECT * FROM i2) AS j FROM integers i1 ORDER BY i;
----
1	1
2	2
3	3
NULL	NULL

# scalar select with operation in projection
query II
SELECT i, (WITH i2 AS (SELECT i+1 FROM integers WHERE i=i1.i) SELECT * FROM i2) AS j FROM integers i1 ORDER BY i;
----
1	2
2	3
3	4
NULL	NULL

# correlated scalar select with constant in projection
query II
SELECT i, (WITH i2 AS (SELECT 42 FROM integers WHERE i=i1.i) SELECT * FROM i2) AS j FROM integers i1 ORDER BY i;
----
1	42
2	42
3	42
NULL	NULL

