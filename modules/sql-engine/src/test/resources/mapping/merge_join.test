N0
SELECT /*+ ENFORCE_JOIN_ORDER, DISABLE_RULE('HashJoinConverter', 'NestedLoopJoinConverter', 'CorrelatedNestedLoopJoin') */ * FROM t1_n1 JOIN t2_n2 USING (id)
---
Fragment#0 root
  distribution: single
  executionNodes: [N0]
  exchangeSourceNodes: {1=[N1]}
  tree: 
    Receiver
        fieldNames: [ID, C1, C2, C10, C20]
        sourceFragmentId: 1
        est: (rows=1)

Fragment#1
  distribution: table PUBLIC.T1_N1 in zone ZONE_1
  executionNodes: [N1]
  targetNodes: [N0]
  exchangeSourceNodes: {3=[N2]}
  partitions: [T1_N1=[N1={0}]]
  tree: 
    Sender
        distribution: single
        targetFragmentId: 0
        est: (rows=30)
      Project
          fieldNames: [ID, C1, C2, C10, C20]
          projection: [ID, C1, C2, C1$0, C2$0]
          est: (rows=30)
        MergeJoin
            predicate: =(ID, ID$0)
            fieldNames: [ID, C1, C2, ID$0, C1$0, C2$0]
            type: inner
            est: (rows=30)
          Sort
              collation: [ID ASC]
              est: (rows=200)
            TableScan
                table: PUBLIC.T1_N1
                fieldNames: [ID, C1, C2]
                est: (rows=200)
          Sort
              collation: [ID ASC]
              est: (rows=1)
            Receiver
                fieldNames: [ID, C1, C2]
                sourceFragmentId: 3
                est: (rows=1)

Fragment#3
  distribution: table PUBLIC.T2_N2 in zone ZONE_3
  executionNodes: [N2]
  targetNodes: [N1]
  partitions: [T2_N2=[N2={0}]]
  tree: 
    Sender
        distribution: table PUBLIC.T1_N1 in zone ZONE_1 by [ID]
        targetFragmentId: 1
        est: (rows=100)
      TableScan
          table: PUBLIC.T2_N2
          fieldNames: [ID, C1, C2]
          est: (rows=100)
---
