Sort
    collation: [C_LAST_NAME ASC, C_FIRST_NAME ASC, C_SALUTATION ASC, C_PREFERRED_CUST_FLAG DESC, SS_TICKET_NUMBER ASC]
    est: (rows=7007)
  Project
      fieldNames: [C_LAST_NAME, C_FIRST_NAME, C_SALUTATION, C_PREFERRED_CUST_FLAG, SS_TICKET_NUMBER, CNT]
      projection: [C_LAST_NAME, C_FIRST_NAME, C_SALUTATION, C_PREFERRED_CUST_FLAG, SS_TICKET_NUMBER, CNT]
      est: (rows=7007)
    HashJoin
        predicate: =(SS_CUSTOMER_SK, C_CUSTOMER_SK)
        type: inner
        est: (rows=7007)
      Exchange
          distribution: single
          est: (rows=100000)
        TableScan
            table: PUBLIC.CUSTOMER
            fieldNames: [C_CUSTOMER_SK, C_SALUTATION, C_FIRST_NAME, C_LAST_NAME, C_PREFERRED_CUST_FLAG]
            est: (rows=100000)
      Filter
          predicate: SEARCH(CNT, Sarg[[15L:BIGINT..20L:BIGINT]]:BIGINT)
          est: (rows=7007)
        ColocatedHashAggregate
            fieldNames: [SS_TICKET_NUMBER, SS_CUSTOMER_SK, CNT]
            group: [SS_TICKET_NUMBER, SS_CUSTOMER_SK]
            aggregation: [COUNT()]
            est: (rows=28026)
          Project
              fieldNames: [SS_TICKET_NUMBER, SS_CUSTOMER_SK]
              projection: [SS_TICKET_NUMBER, SS_CUSTOMER_SK]
              est: (rows=77851)
            HashJoin
                predicate: =(SS_STORE_SK, S_STORE_SK)
                type: inner
                est: (rows=77851)
              HashJoin
                  predicate: =(SS_SOLD_DATE_SK, D_DATE_SK)
                  type: inner
                  est: (rows=77851)
                HashJoin
                    predicate: =(SS_HDEMO_SK, HD_DEMO_SK)
                    type: inner
                    est: (rows=409353)
                  Exchange
                      distribution: single
                      est: (rows=2880404)
                    TableScan
                        table: PUBLIC.STORE_SALES
                        fieldNames: [SS_SOLD_DATE_SK, SS_CUSTOMER_SK, SS_HDEMO_SK, SS_STORE_SK, SS_TICKET_NUMBER]
                        est: (rows=2880404)
                  Exchange
                      distribution: single
                      est: (rows=1023)
                    TableScan
                        table: PUBLIC.HOUSEHOLD_DEMOGRAPHICS
                        predicate: AND(SEARCH(HD_BUY_POTENTIAL, Sarg[_UTF-8'>10000':CHAR(7) CHARACTER SET "UTF-8", _UTF-8'Unknown']:CHAR(7) CHARACTER SET "UTF-8"), >(HD_VEHICLE_COUNT, 0), >(CAST(CASE(>(HD_VEHICLE_COUNT, 0), /(HD_DEP_COUNT, HD_VEHICLE_COUNT), null:INTEGER)):DECIMAL(11, 1), 1.2))
                        fieldNames: [HD_DEMO_SK, HD_BUY_POTENTIAL, HD_DEP_COUNT, HD_VEHICLE_COUNT]
                        est: (rows=1023)
                Exchange
                    distribution: single
                    est: (rows=13893)
                  TableScan
                      table: PUBLIC.DATE_DIM
                      predicate: AND(SEARCH(D_DOM, Sarg[[1..3], [25..28]]), OR(=(D_YEAR, 2000), =(D_YEAR, +(2000, 1)), =(D_YEAR, +(2000, 2))))
                      fieldNames: [D_DATE_SK, D_YEAR, D_DOM]
                      est: (rows=13893)
              Exchange
                  distribution: single
                  est: (rows=12)
                TableScan
                    table: PUBLIC.STORE
                    predicate: SEARCH(S_COUNTY, Sarg[_UTF-8'Arthur County':VARCHAR(30) CHARACTER SET "UTF-8", _UTF-8'Halifax County':VARCHAR(30) CHARACTER SET "UTF-8", _UTF-8'Lunenburg County':VARCHAR(30) CHARACTER SET "UTF-8", _UTF-8'Oglethorpe County':VARCHAR(30) CHARACTER SET "UTF-8", _UTF-8'Perry County':VARCHAR(30) CHARACTER SET "UTF-8", _UTF-8'Salem County':VARCHAR(30) CHARACTER SET "UTF-8", _UTF-8'Sumner County':VARCHAR(30) CHARACTER SET "UTF-8", _UTF-8'Terrell County':VARCHAR(30) CHARACTER SET "UTF-8"]:VARCHAR(30) CHARACTER SET "UTF-8")
                    fieldNames: [S_STORE_SK, S_COUNTY]
                    est: (rows=12)
