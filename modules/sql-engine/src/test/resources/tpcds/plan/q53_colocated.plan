Limit
    fetch: 100
    est: (rows=100)
  Sort
      collation: [AVG_QUARTERLY_SALES ASC, SUM_SALES ASC, I_MANUFACT_ID ASC]
      fetch: 100
      est: (rows=100)
    Filter
        predicate: >(CASE(>(CAST(AVG_QUARTERLY_SALES):DECIMAL(32767, 2), 0.00), /(ABS(-(SUM_SALES, AVG_QUARTERLY_SALES)), AVG_QUARTERLY_SALES), null:DECIMAL(32767, 0)), 0)
        est: (rows=8101)
      Project
          fieldNames: [I_MANUFACT_ID, SUM_SALES, AVG_QUARTERLY_SALES]
          projection: [I_MANUFACT_ID, SUM_SALES, CAST(/(CAST(CASE(>(COUNT(SUM_SALES) OVER (PARTITION BY I_MANUFACT_ID), 0), CAST(SUM(SUM_SALES) OVER (PARTITION BY I_MANUFACT_ID)):DECIMAL(32767, 2), null:DECIMAL(32767, 2))):DECIMAL(32781, 16), COUNT(SUM_SALES) OVER (PARTITION BY I_MANUFACT_ID))):DECIMAL(32781, 16)]
          est: (rows=16202)
        ColocatedHashAggregate
            fieldNames: [I_MANUFACT_ID, D_QOY, SUM_SALES]
            group: [I_MANUFACT_ID, D_QOY]
            aggregation: [SUM(SS_SALES_PRICE)]
            est: (rows=16202)
          Project
              fieldNames: [I_MANUFACT_ID, D_QOY, SS_SALES_PRICE]
              projection: [I_MANUFACT_ID, D_QOY, SS_SALES_PRICE]
              est: (rows=45006)
            HashJoin
                predicate: =(SS_SOLD_DATE_SK, D_DATE_SK)
                type: inner
                est: (rows=45006)
              Exchange
                  distribution: single
                  est: (rows=73049)
                TableScan
                    table: PUBLIC.DATE_DIM
                    predicate: OR(=(D_MONTH_SEQ, 1212), =(D_MONTH_SEQ, +(1212, 1)), =(D_MONTH_SEQ, +(1212, 2)), =(D_MONTH_SEQ, +(1212, 3)), =(D_MONTH_SEQ, +(1212, 4)), =(D_MONTH_SEQ, +(1212, 5)), =(D_MONTH_SEQ, +(1212, 6)), =(D_MONTH_SEQ, +(1212, 7)), =(D_MONTH_SEQ, +(1212, 8)), =(D_MONTH_SEQ, +(1212, 9)), =(D_MONTH_SEQ, +(1212, 10)), =(D_MONTH_SEQ, +(1212, 11)))
                    fieldNames: [D_DATE_SK, D_MONTH_SEQ, D_QOY]
                    est: (rows=73049)
              HashJoin
                  predicate: =(SS_STORE_SK, S_STORE_SK)
                  type: inner
                  est: (rows=45006)
                HashJoin
                    predicate: =(SS_ITEM_SK, I_ITEM_SK)
                    type: inner
                    est: (rows=45006)
                  Exchange
                      distribution: single
                      est: (rows=2880404)
                    TableScan
                        table: PUBLIC.STORE_SALES
                        fieldNames: [SS_SOLD_DATE_SK, SS_ITEM_SK, SS_STORE_SK, SS_SALES_PRICE]
                        est: (rows=2880404)
                  Exchange
                      distribution: single
                      est: (rows=281)
                    TableScan
                        table: PUBLIC.ITEM
                        predicate: OR(AND(SEARCH(I_CATEGORY, Sarg[_UTF-8'Books':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'Children':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'Electronics':VARCHAR(50) CHARACTER SET "UTF-8"]:VARCHAR(50) CHARACTER SET "UTF-8"), SEARCH(I_CLASS, Sarg[_UTF-8'personal':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'portable':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'reference':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'self-help':VARCHAR(50) CHARACTER SET "UTF-8"]:VARCHAR(50) CHARACTER SET "UTF-8"), SEARCH(I_BRAND, Sarg[_UTF-8'exportiunivamalg #9':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'scholaramalgamalg #14':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'scholaramalgamalg #7':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'scholaramalgamalg #9':VARCHAR(50) CHARACTER SET "UTF-8"]:VARCHAR(50) CHARACTER SET "UTF-8")), AND(SEARCH(I_CATEGORY, Sarg[_UTF-8'Men':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'Music':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'Women':VARCHAR(50) CHARACTER SET "UTF-8"]:VARCHAR(50) CHARACTER SET "UTF-8"), SEARCH(I_CLASS, Sarg[_UTF-8'accessories':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'classical':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'fragrances':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'pants':VARCHAR(50) CHARACTER SET "UTF-8"]:VARCHAR(50) CHARACTER SET "UTF-8"), SEARCH(I_BRAND, Sarg[_UTF-8'amalgimporto #1':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'edu packscholar #1':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'exportiimporto #1':VARCHAR(50) CHARACTER SET "UTF-8", _UTF-8'importoamalg #1':VARCHAR(50) CHARACTER SET "UTF-8"]:VARCHAR(50) CHARACTER SET "UTF-8")))
                        fieldNames: [I_ITEM_SK, I_BRAND, I_CLASS, I_CATEGORY, I_MANUFACT_ID]
                        est: (rows=281)
                Exchange
                    distribution: single
                    est: (rows=12)
                  TableScan
                      table: PUBLIC.STORE
                      fieldNames: [S_STORE_SK]
                      est: (rows=12)
