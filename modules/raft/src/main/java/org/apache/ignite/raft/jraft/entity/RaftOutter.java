/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft.proto

package org.apache.ignite.raft.jraft.entity;

import java.util.List;
import org.apache.ignite.raft.jraft.RaftMessageGroup;
import org.apache.ignite.network.annotations.Transferable;
import org.apache.ignite.raft.jraft.rpc.Message;

public final class RaftOutter {
    @Transferable(value = RaftMessageGroup.RaftOutterMessageGroup.ENTRY_META, autoSerializable = false)
    public interface EntryMeta extends Message {
        long term();

        EnumOutter.EntryType type();

        List<String> peersList();

        long dataLen();

        List<String> oldPeersList();

        long checksum();

        List<String> learnersList();

        List<String> oldLearnersList();

        /**
         * @return True when the entry has a checksum, false otherwise.
         */
        boolean hasChecksum();
    }

    @Transferable(value = RaftMessageGroup.RaftOutterMessageGroup.SNAPSHOT_META, autoSerializable = false)
    public interface SnapshotMeta extends Message {
        long lastIncludedIndex();

        long lastIncludedTerm();

        List<String> peersList();

        List<String> oldPeersList();

        List<String> learnersList();

        List<String> oldLearnersList();
    }
}
