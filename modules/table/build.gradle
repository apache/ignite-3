/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "$rootDir/buildscripts/java-core.gradle"
apply from: "$rootDir/buildscripts/java-junit5.gradle"
apply from: "$rootDir/buildscripts/java-integration-test.gradle"

dependencies {
    annotationProcessor project(':ignite-configuration-annotation-processor')
    annotationProcessor project(':ignite-network-annotation-processor')
    implementation project(':ignite-api')
    implementation project(':ignite-schema')
    implementation project(':ignite-core')
    implementation project(':ignite-metastorage')
    implementation project(':ignite-affinity')
    implementation project(':ignite-baseline')
    implementation project(':ignite-network-api')
    implementation project(':ignite-raft')
    implementation project(':ignite-replicator')
    implementation project(':ignite-raft-client')
    implementation project(':ignite-metastorage-client')
    implementation project(':ignite-storage-api')
    implementation project(':ignite-transactions')
    implementation project(':ignite-configuration')
    implementation project(':ignite-extended-api')
    implementation libs.jetbrains.annotations
    implementation libs.fastutil.core

    testImplementation project(':ignite-configuration')
    testImplementation project(':ignite-storage-api')
    testImplementation project(':ignite-storage-page-memory')
    testImplementation project(':ignite-storage-rocksdb')
    testImplementation project(':ignite-index')
    testImplementation project(':ignite-network')
    testImplementation project(':ignite-core')
    testImplementation project(':ignite-raft')
    testImplementation project(':ignite-schema')
    testImplementation project(':ignite-page-memory')
    testImplementation(testFixtures(project(':ignite-core')))
    testImplementation(testFixtures(project(':ignite-schema')))
    testImplementation(testFixtures(project(':ignite-configuration')))
    testImplementation(testFixtures(project(':ignite-transactions')))
    testImplementation(testFixtures(project(':ignite-storage-api')))
    testImplementation(testFixtures(project(':ignite-raft')))
    testImplementation libs.mockito.core
    testImplementation libs.mockito.inline
    testImplementation libs.mockito.junit
    testImplementation libs.hamcrest.core
    testImplementation libs.hamcrest.optional
    testImplementation libs.classgraph
    testImplementation libs.slf4j.jdk14
    testImplementation libs.jmh.core
    testImplementation libs.javax.annotations

    integrationTestImplementation(testFixtures(project(':ignite-core')))
    integrationTestImplementation(testFixtures(project(':ignite-configuration')))
    integrationTestImplementation(testFixtures(project(':ignite-network')))
    integrationTestImplementation(testFixtures(project(':ignite-raft')))
    integrationTestImplementation(testFixtures(project(':ignite-storage-api')))
    integrationTestImplementation(testFixtures(project(':ignite-transactions')))
}

description = 'ignite-table'
