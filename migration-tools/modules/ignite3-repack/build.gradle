/*
 *  Copyright (C) GridGain Systems. All Rights Reserved.
 *  _________        _____ __________________        _____
 *  __  ____/___________(_)______  /__  ____/______ ____(_)_______
 *  _  / __  __  ___/__  / _  __  / _  / __  _  __ `/__  / __  __ \
 *  / /_/ /  _  /    _  /  / /_/ /  / /_/ /  / /_/ / _  /  _  / / /
 *  \____/   /_/     /_/   \_,__/   \____/   \__,_/  /_/   /_/ /_/
 */

plugins {
    alias(libs.plugins.shadow)
}

apply from: "$rootDir/buildscripts/java-core.gradle"
apply from: "$rootDir/buildscripts/publishing.gradle"
apply from: "$rootDir/buildscripts/java-junit5.gradle"
apply from: "$rootDir/buildscripts/java-test-fixtures.gradle"

description = 'migration-tools-ignite3-repack'

dependencies {
    runtimeOnly project(":ignite-client")
    runtimeOnly project(":ignite-api")
    runtimeOnly project(":ignite-core")
    runtimeOnly project(":ignite-configuration")
    runtimeOnly project(":ignite-configuration-api")
    runtimeOnly project(":ignite-page-memory")
    runtimeOnly project(":ignite-client-handler")
    runtimeOnly project(":ignite-runner")
    runtimeOnly project(":ignite-catalog")
    runtimeOnly project(":ignite-catalog-dsl")
    runtimeOnly project(":ignite-network")
    runtimeOnly project(":ignite-placement-driver-api")
    runtimeOnly project(":ignite-schema")
    runtimeOnly project(":ignite-security")
    runtimeOnly project(":ignite-sql-engine")
    runtimeOnly project(":ignite-table")
    runtimeOnly project(":ignite-transactions")
    runtimeOnly project(":ignite-metastorage-api")
    runtimeOnly project(":ignite-client-common")
    runtimeOnly project(":ignite-metrics")
    runtimeOnly project(":ignite-binary-tuple")
    runtimeOnly project(":ignite-marshaller-common")
    runtimeOnly project(":ignite-bytecode")
    runtimeOnly project(":ignite-network-api")
    runtimeOnly project(":ignite-vault")
    runtimeOnly project(":ignite-rocksdb-common")
    runtimeOnly project(":ignite-replicator")
    runtimeOnly project(":ignite-raft-api")
    runtimeOnly project(":ignite-distribution-zones")
    runtimeOnly project(":ignite-raft")
    runtimeOnly project(":ignite-partition-distribution")
    runtimeOnly project(":ignite-cluster-management")
    runtimeOnly project(":ignite-index")
    runtimeOnly project(":ignite-storage-api")
    runtimeOnly project(":ignite-system-view")
    runtimeOnly project(":ignite-cli")

    // TODO: All the transitive deps should be made into shadow
    shadow libs.asm.core
    shadow libs.asm.tree
    shadow libs.asm.util
    shadow libs.fastutil.core
    shadow libs.caffeine
    shadow libs.netty.common
    shadow libs.netty.buffer
    shadow libs.netty.codec
    shadow libs.netty.handler
    shadow libs.msgpack.core
    shadow "org.msgpack:jackson-dataformat-msgpack:0.8.24"
    shadow libs.auto.service.annotations
    shadow libs.typesafe.config
}

jar {
    dependsOn(tasks.shadowJar)
    enabled = false
}

shadowJar {
    archiveClassifier.set("")
    //configurations = [project.configurations.implementation]
    mergeServiceFiles()
    append 'META-INF/transferable.messages'
    dependencies {
        include(dependency(project.group + '::'))
    }
    exclude "ignite.properties"
    relocate('org.apache.ignite', 'org.apache.ignite3')
}

publishing {
    publications {
        shadow(MavenPublication) {
            from components.shadow
        }
    }
}

signing {
    sign publishing.publications
}
